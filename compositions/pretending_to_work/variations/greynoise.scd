//slow and unfocused
z = Server.internal;

//pink noise amplitude curve
SynthDef("just-sine",{|freq=100,freq2=50, atk=1, rel=1, sus=1, amp=0.005,pan =0,gate=0,f2=2,a2=2|
	Out.ar(0,Mix.ar(Pan2.ar(FSinOsc.ar( [1,1] * freq,0,128 * amp/(freq+128)),pan)) * EnvGen.ar(Env.perc(atk,rel, 1, sus),gate, doneAction:2) );}).load(z);

~clock = TempoClock.new(1/2,0,0,16384);
~clock.tempo_(4.5);
~tempo = 4/32;
~i= ((2**24)+(2**23)+(2**22)+(2**21)+(2**20)+(2**19)).asInt;

~r = Routine {
	(2**16).asInt.do({|x|
		var i=~i;
		~play.value(i.asInt,x.asInt);
		~i = ~inc.value(i.asInt);
		"x: ".post;
		x.postln;
	});
240.wait;
z.freeAll;
};

~inc = {|i|
	var a = ((2**(i.log10.floor+1)));
	(i+a).asInt;
};

~w = [  {0}];

~play = {|i,x|
		var il,ill,r,w,hf,jf,ii,n,n2,logTen;
		ii=i;
		il = ({|x|((2**x)*(i/(2**x)%2).floor)}!i.log2.ceil.asInt);
		ill = (1+il).log2.floor;
		ill.postln;
		il.postln;
			i=( il.sort.reverse[0] + il.reverse[1] + il.sort.reverse.wrapAt(i.log10-1) +(i%il.sort.reverse.wrapAt(i.log10+1))- (2**il.sort.reject(_!=0).size)+  (i%il.sort.reverse.wrapAt(i.log10 - il.reject(_==0).size.log2.ceil))).ceil.asInt;
	
		logTen = (i+1).log10.ceil.asInt;
		({|i|i}!~w.size).wrapAt(ill.reverse.wrapAt(logTen-3)).postln;
		hf = ([2**(i.log10+2).ceil,il.reject(_==0).reject(_ > (2**16))].flat.reverse.wrapAt(logTen+2)).floor.asInt;
		hf.postln;
		w = ~w.wrapAt(ill.reverse.wrapAt(logTen - 3));
		n=({|j|(j*2)+1}!(i.abs+2).log2.ceil);
		n2 = ((1..(i.abs+10).log10.ceil)+1) / (1..(i.abs+10).log10.ceil);
		n2.postln;
		//n = n *.x (n2);
		n = n *.x ([n2.wrapAt(i.factors.size),n2].wrapAt((i.factors.reverse[0]+2).log2));

		n.postln;
		i.postln;
		i.factors.postln;		
		r = Routine {

		i.factors.do({|p,j|
			var rr = Routine {
				p.log2.ceil.asInt.do({|k|
				var pp = i.factors[j].asInt;
				(z.peakCPU > 90).if({z.freeAll});

				(p.log10.ceil).ceil.asInt.do({|l|
					var s,freq;
					s = Synth("just-sine");
					p=p.nextPowerOfTwo;		
					freq =((p  *.x n.wrapAt(ill.sum + (l+j+pp  +(k%i.factors.wrapAt(i) ) -2))) * (2**(i.factors.size%8)));
					freq = freq *  (hf + ((j + k + l) * i.factors.reverse[0].log10.floor)) / hf ;
					(freq > (2**14)).if({freq = freq / (2**(p.log.ceil+1))});
					(freq > (2**14)).if({freq = freq / (2**(p.log.ceil+1))});
					(freq > (2**14)).if({freq = freq / (2**(p.log.ceil+1))});
					s.set(\freq, freq);

					[
					{s.set(\rel,((20+l)/pp.log2.ceil)*~tempo);},					
					{s.set(\rel,(0.25 * (1+l)*pp.log2.clip(1,32))*~tempo);}
					].wrapAt(ill.sort.reject(_==0).wrapAt(4)).value;
					

					s.set(\pan,(2/(i.factors[j])) * (-1**((ii+j)%5)));
					s.set(\atk,(1/freq) * (2**i.factors[j].log.clip(1,10).ceil) * (1/(i.log10*2)));

					s.set(\sus,-1 * (i.factors[j].log2.clip(1,12)/3));
					s.set(\gate,1);
					
					s.set(\amp,1 *  0.05 / ((k/p.log10.ceil)+1));

					});
				w.(pp,i,k).wait;
				});
				
			};
			~clock.play(rr,0);
			});
		};
		~clock.play(r,0);
		(1/2).wait;
};


~clock.play(~r,0);
z.scope;
