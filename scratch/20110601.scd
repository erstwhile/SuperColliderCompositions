(

(0..3).do({|i|
		var n = [1,3/2,5/2,15/4,9/4,45/8];
		var p = (60 *.x (n) *.x (((16*i)+1)..(16 * (i+1)))).sort;
		var x = (64*i);
		var t = (((64+x)..(127+x)) / (120));
		~synthFactory.("pythagorean-intro"++i,{|f=1,a=40,m=0.125,r=1,w=0.5|
		SinOsc.ar(p*f,0,(1/((p+16)*p.log2))*(LFPulse.kr(t*r,0,   w + SinOsc.kr((m*r)/t,0,0.5,0),1,0) * a))};
		,{({|i|i=i+1; i/16}!16)*.x[-1,1]},Server.internal)
})

)
(
(0..3).do({|i|
		var n = [1,3/2,5/2,15/4,9/4,45/8];
		var p = (60 *.x (n) *.x (((16*i)+1)..(16 * (i+1)))).sort;
		var t = (p / (60));
		t = ((30)/(1..16)).sort *.x [1,1,1,1,1,1];
		~synthFactory.("pythagorean-fade"++i,{|f=1,a=40,m=0.125,r=1,w=0.5|
		SinOsc.ar(p*f,0,(1/((p+16)*p.log2))*(LFPulse.kr(t*r,0,   w + SinOsc.kr((m*r)/t,0,0.5,0),1,0) * a))};
		,{({|i|i=i+1; i/16}!16)*.x[-1,1]},Server.internal)
})
)
(
Routine {

	~z.collect({|i,j|~z[j].set(\gate,0);});
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-intro"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\atk,4+j,\rel,j+1);
		~z[j].set(\gate,1);
	});
	~z.collect({|i,j|	~z[j].set(\f,20/16 * [1,(1.5**12)/128].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,32/[24,48].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,32/[4,8].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.25].wrapAt(j));});

	(15/4).wait;
	Routine {
		[20/16,20/18,20/20,24/20,25/20,27/20,24/20,20/20,20/16].collect({|item,step|
		~z.collect({|i,j|	~z[j].set(\f,item * [1,2401/2400].wrapAt(j));});
		((step+2) * 15/16).wait;
		})		
	}.play;
	(({|i|i}!10).sum*15/16).wait;



	~z.collect({|i,j|~z[j].set(\gate,0);});
	(15/2).wait;
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-fade"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\atk,1,\rel,j+1);
		~z[j].set(\gate,1);
	});
	~z.collect({|i,j|	~z[j].set(\f,20/16 * [1,2401/2400].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,32/[64,48].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,32/[48,48].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.125].wrapAt(j));});
	(96*15/16).wait;
	
	~z.collect({|i,j|~z[j].set(\gate,0);});
	(4*15/16).wait;
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-fade"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\atk,j+1,\rel,j+1);
		~z[j].set(\gate,1);
	});
	~z.collect({|i,j|	~z[j].set(\f,20/18 * [1,(1.5**12)/128].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,32/[32,48].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,32/[32,32].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.5].wrapAt(j));});
	(128*15/16).wait;
	~z.collect({|i,j|~z[j].set(\gate,0);});
	(4*15/16).wait;
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-fade"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\gate,1);
		~z[j].set(\atk,j+1,\rel,j+1);
	});
	~z.collect({|i,j|	~z[j].set(\f,20/20 * [1,64/63].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,24/[32,24].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,24/[32,24].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.75,0.25].wrapAt(j));});

	(64*15/16).wait;
	~z.collect({|i,j|~z[j].set(\gate,0);});
	(8*15/16).wait;
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-fade"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\gate,1);
		~z[j].set(\atk,j+1,\rel,j+1);
	});
	~z.collect({|i,j|	~z[j].set(\f,24/20 * [1,64/63].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,24/[48,24].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,4/[24,32].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.75,0.75].wrapAt(j));});

	(64*15/16).wait;
	~z.collect({|i,j|~z[j].set(\gate,0);});
	(10*15/16).wait;
	~z = Array.fill(8);
	~z.collect({|i,j|
		~z[j]=Synth("pythagorean-fade"++([0,0,1,1,2,2,3,3].wrapAt(j)) ,nil,Server.internal);
		~z[j].set(\gate,1);
		~z[j].set(\atk,2*j+1,\rel,2*j+1);
	});
	~z.collect({|i,j|	~z[j].set(\f,25/20 * [1,64/63].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\r,8/[48,24].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\m,128/[32,64].wrapAt(j));});
	~z.collect({|i,j|~z[j].set(\w,[0.075,0.075].wrapAt(j));});
	(96*15/16).wait;
	~z.collect({|i,j|~z[j].set(\gate,0);});

}.play;
)
